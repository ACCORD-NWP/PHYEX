Module de clés namelists PHYEX. Des modules sont assez généraux et utilisés ailleurs dans Méso-NH (répertoire aux)
  - Une solution serait de créer un module propre à PHYEX qui contiendrait des clés de contrôle de haut niveau
    pour la physique. Ce module serait initialisé dans Méso-NH à partir de clés actuellement en dehors
    de la physique.
  - Une autre solution serait de supprimer ces modules de PHYEX et de recevoir ces quelques clés en argument (ex modd_lunit?)
  - si certains modules contiennent des clés purement physiques et d'autres purement dynamique, on pourrait scinder le module

Documentation: search for the TODO keys in the *.md files of the docs directory

Intégration de PHYEX dans des cycles/versions officielles:
- Clés de compilation
  - Clé de compilation REPRO48 + REPRO55 ajoutées pour permettre de reproduire le cycle 48 MNH-5.5.0, elles:
      - contournent des corrections de bug
      - modifient l'organisation de calculs
      - REPRO48 reproduit les résultats obtenus avant l'introduction de la fraction précipitante froide dans l'ajustement
  - Utilisation des clés:
        - REPRO48 seule: la version de code qui sera retenue à la fin est celle de Méso-NH 5.5
        - REPRO55 seule: la version de code qui sera retenue à la fin est celle du cycle 48 d'AROME
        - defined(REPRO48) || defined(REPRO55): la version de code qui sera retenue à la fin est nouvelle
  - Ces clés devront être supprimées
- Répertoires ext
  - Répertoire arome/ext et mesonh/ext contiennent les codes non PHYEX qu'il faut modifier dans le pack pour qu'il puisse être compilé.
  - Ce répertoire devra être vidé à la fin du phasage, les modifications nécessaires ayadevront avoir été fournies par ailleurs
- modd_spp_type est pour l'instant dans mpa/micro/externals mais n'est pas de la microphysique

Merge pb:
  - rain_ice_old a rebrancher dans Meso-NH

Pb identifiés à corriger plus tard:
  - deposition devrait être déplacée dans ice4_tendencies
  - avec les optimisations de Ryad, les tableaux 3D de precip passés à ice4_tendencies
    lorsque HSUBG_RC_RR_ACCR=='PRFR' ne sont  pas utilisables puisque les K1, K2 et K3
    sont relatifs à la boucle IMICRO et que les calculs faits en debut de routine ne
    concernent qu'une partie des points
         => à corriger
  - seules quelques options sont testées avec les cas test (par exemple, il faudrait tester RMC01 mais
    l'option n'est pas remontée en namelist)
  - sedimentation momentum non branchée
  - si possible, modifier ice4_sedimentation_split* dans le même esprit que stat

Budgets/DDH
- Le code dans budget_DDH devra être transféré dans mode_budget
- les routines arome specifiques aux budgets sont dans mpa/micro, il faudrait les mettre dans aux
- Le module modd_dyn n'est utilisé que pour les budgets, voir s'il peut être supprimé
- Le code des budgets devrait être revu: pas en phase avec celui de Méso-NH et phasage a priori
  inutile car très peu de code semble réellement utile pour AROME

Enable mnh_expand with fcm build

Reprendre les différents outils en deux scripts principaux:
- outil pour reprendre toutes les fonctionnalités sur le code: filepp, MNH_Expand_Array, correct_indent.py, verify_mnh_expand.py et renommage
- outil prep_code débarrassé du renommage pour ne faire que la gestion des commit et lancer la manipulation sur le code
Il restera, à part, les scripts de comparaison des résultats (à moins qu'ils puissent être placés dans les check_commit correspondant)
